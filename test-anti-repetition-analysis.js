import VisionAnalyzer from './vision-analyzer.js';
import fs from 'fs';

console.log('üß† PRUEBA DE AN√ÅLISIS ANTI-REPETICI√ìN INTELIGENTE');
console.log('==================================================');

async function testAntiRepetitionAnalysis() {
    try {
        // Crear instancia simulada sin OpenAI para testing
        const analyzer = {
            conversationHistory: [],
            analyzeRecentContent: VisionAnalyzer.prototype.analyzeRecentContent,
            generateVariationRecommendation: VisionAnalyzer.prototype.generateVariationRecommendation
        };
        
        // Cargar historial directamente del archivo JSON
        if (fs.existsSync('./historial-comentarios.json')) {
            const historialData = JSON.parse(fs.readFileSync('./historial-comentarios.json', 'utf8'));
            if (historialData.conversations && Array.isArray(historialData.conversations)) {
                analyzer.conversationHistory = historialData.conversations;
            }
        }
        
        console.log(`üìä Comentarios cargados: ${analyzer.conversationHistory.length}`);
        
        // Realizar an√°lisis anti-repetici√≥n
        const analysis = analyzer.analyzeRecentContent();
        
        console.log('\nüîç AN√ÅLISIS DE CONTENIDO RECIENTE:');
        console.log('------------------------------');
        
        console.log('\nüìù PALABRAS REPETIDAS (√∫ltimos 5 comentarios):');
        if (analysis.wordsUsed.length > 0) {
            analysis.wordsUsed.forEach(word => {
                console.log(`   ‚ö†Ô∏è  "${word}"`);
            });
        } else {
            console.log('   ‚úÖ No hay palabras significativamente repetidas');
        }
        
        console.log('\nüé≠ TEMAS DETECTADOS:');
        if (analysis.themesUsed.length > 0) {
            analysis.themesUsed.forEach(theme => {
                console.log(`   üéØ ${theme}`);
            });
        } else {
            console.log('   ‚úÖ No hay temas predominantes detectados');
        }
        
        console.log('\nüí≠ FRASES SARC√ÅSTICAS USADAS:');
        if (analysis.sarcasticPhrases.length > 0) {
            analysis.sarcasticPhrases.forEach(phrase => {
                console.log(`   üé™ "${phrase}"`);
            });
        } else {
            console.log('   ‚úÖ No hay frases sarc√°sticas detectadas como repetitivas');
        }
        
        console.log('\nüéØ RECOMENDACI√ìN INTELIGENTE:');
        console.log(`   üí° ${analysis.recommendation}`);
        
        console.log('\nüìö COMENTARIOS RECIENTES ANALIZADOS:');
        console.log('------------------------------');
        if (analysis.recentComments) {
            analysis.recentComments.forEach((comment, index) => {
                console.log(`${index + 1}. "${comment}"`);
            });
        }
        
        console.log('\n‚ú® SISTEMA ANTI-REPETICI√ìN FUNCIONANDO CORRECTAMENTE ‚ú®');
        
    } catch (error) {
        console.error('‚ùå Error en an√°lisis anti-repetici√≥n:', error.message);
    }
}

testAntiRepetitionAnalysis();
